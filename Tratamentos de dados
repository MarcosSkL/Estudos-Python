{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Lista 05 -  Probabilidade e Estatísticas.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyM3Tq1qByff7kA5luNhqNN4",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/MarcosSkL/HTML5-e-CSS3/blob/main/Lista_05_Probabilidade_e_Estat%C3%ADsticas.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3HiRuTVQ5yq0"
      },
      "source": [
        "<h1><b>LISTA 05</b> - Probabilidade e Estatísticas"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4HknLhef56PC"
      },
      "source": [
        "<p><h2><b><i>Questão 01"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 342
        },
        "id": "ZyU8yXGxgzwQ",
        "outputId": "a681e9fb-da32-4980-ac0c-b98e92ec796e"
      },
      "source": [
        "%reset -f \n",
        "import pandas as pd # importar a biblioteca de tratamento de dados\n",
        "import seaborn as sn  #  melhorar o visual dos gráficos\n",
        "import matplotlib.pyplot as plt # Importar bibliotecas para montar um gráfico \n",
        "agt = {'matematica': [60, 58, 73, 51, 54, 75, 48, 72, 75, 83, 62, 52], 'musica': [80, 62, 70, 83, 62, 92, 79, 88, 54, 82, 64, 69]} # dados descritos na questão\n",
        "quadro = pd.DataFrame(agt, columns = ['matematica', 'musica']) # Montando um quadro de dados\n",
        "crl = quadro.corr() #Calculando a correlação\n",
        "print(crl)\n",
        "sn.heatmap(crl, annot = True) # Grafico de calor \n",
        "plt.show \n",
        "# Se o resultado for maior que 0, é uma correlação positiva, 0.16 = positivo, porém fraca."
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            matematica    musica\n",
            "matematica    1.000000  0.169146\n",
            "musica        0.169146  1.000000\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function matplotlib.pyplot.show>"
            ]
          },
          "metadata": {},
          "execution_count": 59
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2E3bnvj16IVh"
      },
      "source": [
        "<p><h2><b><i>Questão 02"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "X99wddgr399M"
      },
      "source": [
        "# Como o r = 0,207 está mais proximo do 0, significa que há uma correlação positiva, porém fraca.\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mA_I4TPS6TSw"
      },
      "source": [
        "<p><h2><b><i>Questão 03"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 342
        },
        "id": "1DMfimqL4BBs",
        "outputId": "a4c42806-6f4b-4520-e5b4-12b6a18186d8"
      },
      "source": [
        "%reset -f\n",
        "import pandas as pd # importar a biblioteca de tratamento de dados\n",
        "import seaborn as sn #  melhorar o visual dos gráficos\n",
        "import matplotlib.pyplot as plt # Importar bibliotecas para montar um gráfico \n",
        "xy = {'anos': [2, 3, 4, 5, 4, 6, 7, 8, 8, 10], 'clientes': [48, 50, 56, 52, 43, 60, 62, 58, 64, 72]}\n",
        "quadro = pd.DataFrame(xy, columns = ['anos', 'clientes']) # Montando um quadro de dados\n",
        "crl = quadro.corr() # Calculando a correlação\n",
        "print(crl) # imprimi apenas os numeros sem formar um gráfico \n",
        "sn.heatmap(crl, annot = True) # gera a reguá do Grafico de calor\n",
        "plt.show # mostrar o grafico na tela\n",
        "print(\"Está proximo do 1, então existe uma correlação positiva e forte.\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              anos  clientes\n",
            "anos      1.000000  0.876795\n",
            "clientes  0.876795  1.000000\n",
            "Está proximo do 1, então existe uma correlação positiva e forte.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f68DPptug0op"
      },
      "source": [
        "<p><h2><b><i>Questão 04</b></i>\n",
        "<p> Em uma pesquisa feita com 10 familias com renda bruta mensal entre 10 e 60 salarios minimos, mediram-se X: Renda Bruta Mensal (Expressa em números de salários mínimos) e Y: A porcentagem da renda  bruta anual gasta com assistência médica.\n",
        "<p>X: 12, 16, 18, 20, 28, 30, 40, 48, 50, 54   \n",
        "<p>Y: 7.2, 7.4, 7.0, 6.5, 6.6, 6.7, 6.0, 5.6, 6.0, 5.5  \n",
        "<p>Calcule o coeficiente da correlação.  "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "pf-nWR9nhERL",
        "outputId": "80714798-371c-4e39-9382-08d00cf89638"
      },
      "source": [
        "%reset -f\n",
        "import pandas as pd # importar a biblioteca de tratamento de dados\n",
        "import seaborn as sn #  melhorar o visual dos gráficos\n",
        "import matplotlib.pyplot as plt  #Importar bibliotecas para montar um gráfico \n",
        "data = {\"X\":[12, 16, 18, 20, 28, 30, 40, 48, 50, 54], \"Y\":[7.2, 7.4, 7.0, 6.5, 6.6, 6.7, 6.0, 5.6, 6.0, 5.5]} # Alocando os dados em uma Lista\n",
        "rb = pd.DataFrame(data, columns = [\"X\", \"Y\"]) # Montando um quadro de dados\n",
        "corrBruta = rb.corr() # Calculando a correlação\n",
        "sn.heatmap(corrBruta, annot=True) # gera a reguá do Grafico de calor\n",
        "plt.show # mostrar o grafico na tela \n",
        "print(\"COEFICIENTE DA CORRELAÇÃO ENTRE X E Y E: -0.94\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "COEFICIENTE DA CORRELAÇÃO ENTRE X E Y E: -0.94\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oYJyXVAR6l-b"
      },
      "source": [
        "<p><h2><b><i>Questão 05"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Jmmt1E_78aTv"
      },
      "source": [
        "<p><h1><b>a)\n",
        "<p><b>Conjunto 1</b><br></b>\n",
        "<b>X</b>: 10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5<br>\n",
        "<b>Y</b>: 8.04, 6.95, 7.58, 8.81, 8.33, 9.96, 7.24, 4.26, 10.84, 4.82, 5.68<br>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7TvzVoWt6kdE",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "201f2a55-e060-48e6-fba5-e17fc16346eb"
      },
      "source": [
        "%reset -f\n",
        "import statistics # importar Bilbioteca\n",
        "X = [10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5] # Alocando os dados em uma Lista\n",
        "Y = [8.04, 6.95, 7.58, 8.81, 8.33, 9.96, 7.24, 4.26, 10.84, 4.82, 5.68] # Alocando os dados em uma Lista\n",
        "print(\"A media de X é: \", statistics.mean(X)) # Cauculando a Média aritmética dos dados de X\n",
        "print(\"A media de Y é: \", statistics.mean(Y))  # Cauculando a Média aritmética dos dados de Y\n",
        "print(\"O desvio padrão de X é: \", statistics.stdev(X)) # Cauculando o Desvio Padrão de X\n",
        "print(\"O desvio padrão de Y é: \", statistics.stdev(Y)) # Cauculando o Desvio Padrão de Y"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A media de X é:  9\n",
            "A media de Y é:  7.500909090909091\n",
            "O desvio padrão de X é:  3.3166247903554\n",
            "O desvio padrão de Y é:  2.031568135925815\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jUQ27oQX3qej"
      },
      "source": [
        "<p><b>Conjunto 2</b><br>\n",
        "<b>X</b>: 10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5<br>\n",
        "<b>Y</b>: 9.14, 8.14, 8.74, 8.77, 9.26, 8.10, 6.13, 3.10, 9.13, 7.26, 4.74<br>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0_pDJbM73rv0",
        "outputId": "848f8cb3-f255-4ca8-ecbc-110a6d69cdff"
      },
      "source": [
        "%reset -f\n",
        "import statistics # importar Bilbioteca\n",
        "X = [10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5] # Alocando os dados em uma Lista\n",
        "Y = [9.14, 8.14, 8.74, 8.77, 9.26, 8.10, 6.13, 3.10, 9.13, 7.26, 4.74] # Alocando os dados em uma Lista\n",
        "print(\"A media de X é: \", statistics.mean(X)) # Cauculando a Média aritmética dos dados de X\n",
        "print(\"A media de Y é: \", statistics.mean(Y)) # Cauculando a Média aritmética dos dados de Y\n",
        "print(\"O desvio padrão de X é: \", statistics.stdev(X)) # Cauculando o Desvio Padrão de X\n",
        "print(\"O desvio padrão de Y é: \", statistics.stdev(Y)) # Cauculando o Desvio Padrão de Y"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A media de X é:  9\n",
            "A media de Y é:  7.500909090909091\n",
            "O desvio padrão de X é:  3.3166247903554\n",
            "O desvio padrão de Y é:  2.0316567355016177\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SJQPcl773uRd"
      },
      "source": [
        "<p><b>Conjunto 3</b><br>\n",
        "<b>X</b>: 10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5<br>\n",
        "<b>Y</b>: 7.46, 6.77, 12.74, 7.11, 7.81, 8.84, 6.08, 5.39, 8.15, 6.42, 5.73<br>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "__kMIdN03u5G",
        "outputId": "09f64c95-94ba-4b55-b1d6-fbe23203bc66"
      },
      "source": [
        "%reset -f\n",
        "import statistics # importar Bilbioteca\n",
        "X = [10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5] # Alocando os dados em uma Lista\n",
        "Y = [7.46, 6.77, 12.74, 7.11, 7.81, 8.84, 6.08, 5.39, 8.15, 6.42, 5.73] # Alocando os dados em uma Lista\n",
        "print(\"A media de X é: \", statistics.mean(X)) # Cauculando a Média aritmética dos dados de X\n",
        "print(\"A media de Y é: \", statistics.mean(Y)) # Cauculando a Média aritmética dos dados de Y\n",
        "print(\"O desvio padrão de X é: \", statistics.stdev(X)) # Cauculando o Desvio Padrão de X\n",
        "print(\"O desvio padrão de Y é: \", statistics.stdev(Y)) # Cauculando o Desvio Padrão de Y"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A media de X é:  9\n",
            "A media de Y é:  7.5\n",
            "O desvio padrão de X é:  3.3166247903554\n",
            "O desvio padrão de Y é:  2.030423601123667\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uXZ8DeF_3skk"
      },
      "source": [
        "<p><b>Conjunto 4</b><br>\n",
        "<b>X</b>: 8, 8, 8, 8, 8, 8, 8, 19, 8, 8, 8<br>\n",
        "<b>Y</b>: 6.58, 5.76, 7.71, 8.84, 8.47, 7.04, 5.25, 12.50, 5.56, 7.91, 6.89"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OgUnQCrZ3tyt",
        "outputId": "04be4aac-ab31-4668-9b96-fe6d56808936"
      },
      "source": [
        "%reset -f\n",
        "import statistics  # importar Bilbioteca\n",
        "X = [ 8, 8, 8, 8, 8, 8, 8, 19, 8, 8, 8] # Alocando os dados em uma Lista\n",
        "Y = [ 6.58, 5.76, 7.71, 8.84, 8.47, 7.04, 5.25, 12.50, 5.56, 7.91, 6.89] # Alocando os dados em uma Lista\n",
        "print(\"A media de X é: \", statistics.mean(X)) # Cauculando a Média aritmética dos dados de X\n",
        "print(\"A media de Y é: \", statistics.mean(Y)) # Cauculando a Média aritmética dos dados de Y\n",
        "print(\"O desvio padrão de X é: \", statistics.stdev(X)) # Cauculando o Desvio Padrão de X\n",
        "print(\"O desvio padrão de Y é: \", statistics.stdev(Y)) # Cauculando o Desvio Padrão de Y"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A media de X é:  9\n",
            "A media de Y é:  7.500909090909091\n",
            "O desvio padrão de X é:  3.3166247903554\n",
            "O desvio padrão de Y é:  2.0305785113876023\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zSkNkmwq8bhH"
      },
      "source": [
        "<p><h1><b>b) </h1><br></b>\n",
        "<p><b>Conjunto 1</b><br>\n",
        "<b>X</b>: 10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5<br>\n",
        "<b>Y</b>: 8.04, 6.95, 7.58, 8.81, 8.33, 9.96, 7.24, 4.26, 10.84, 4.82, 5.68<br>\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xOPmMQmb8bQP",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "outputId": "0c2d29d8-86e5-4c06-a578-3d999b1fc535"
      },
      "source": [
        "%reset -f\n",
        "import pandas as pd # importar a biblioteca de tratamento de dados\n",
        "import seaborn as sn #  melhorar o visual dos gráficos\n",
        "import matplotlib.pyplot as plt  #Importar bibliotecas para montar um gráfico \n",
        "data = {\"X\":[10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5], \"Y\":[8.04, 6.95, 7.58, 8.81, 8.33, 9.96, 7.24, 4.26, 10.84, 4.82, 5.68]} # Alocando os dados em uma Lista\n",
        "rb = pd.DataFrame(data, columns = [\"X\", \"Y\"]) # Montando um quadro de dados\n",
        "corrBruta = rb.corr() # Calculando a correlação\n",
        "sn.heatmap(corrBruta, annot=True) # gera a reguá do Grafico de calor\n",
        "plt.show # mostrar o grafico na tela \n",
        "print(\"O coeficiente de correlação e 0,82\") "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "O coeficiente de correlação e 0,82\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W-UYjWfEm1Xp"
      },
      "source": [
        "<b>Conjunto 2</b><br>\n",
        "<b>X</b>: 10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5<br>\n",
        "<b>Y</b>: 9.14, 8.14, 8.74, 8.77, 9.26, 8.10, 6.13, 3.10, 9.13, 7.26, 4.74<br>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "oYMDuFm8nG6q",
        "outputId": "0f51bdb8-7157-4ed1-b8a9-6a33c2ab1a1c"
      },
      "source": [
        "%reset -f\n",
        "import pandas as pd # importar a biblioteca de tratamento de dados\n",
        "import seaborn as sn #  melhorar o visual dos gráficos\n",
        "import matplotlib.pyplot as plt  #Importar bibliotecas para montar um gráfico \n",
        "data = {\"X\":[10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5], \"Y\":[ 9.14, 8.14, 8.74, 8.77, 9.26, 8.10, 6.13, 3.10, 9.13, 7.26, 4.74]} # Alocando os dados em uma Lista\n",
        "rb = pd.DataFrame(data, columns = [\"X\", \"Y\"]) # Montando um quadro de dados\n",
        "corrBruta = rb.corr() # Calculando a correlação\n",
        "sn.heatmap(corrBruta, annot=True) # gera a reguá do Grafico de calor\n",
        "plt.show # mostrar o grafico na tela\n",
        "print(\"O coeficiente de correlação e 0,82\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "O coeficiente de correlação e 0,82\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yLDUKFwbnH0y"
      },
      "source": [
        "<b>Conjunto 3</b><br>\n",
        "<b>X</b>: 10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5<br>\n",
        "<b>Y</b>: 7.46, 6.77, 12.74, 7.11, 7.81, 8.84, 6.08, 5.39, 8.15, 6.42, 5.73<br>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "Mi8lFy7InRAA",
        "outputId": "0c43dd8b-ce2e-4b1e-80d7-36ec5e04ec16"
      },
      "source": [
        "%reset -f\n",
        "import pandas as pd # importar a biblioteca de tratamento de dados\n",
        "import seaborn as sn #  melhorar o visual dos gráficos\n",
        "import matplotlib.pyplot as plt  #Importar bibliotecas para montar um gráfico \n",
        "data = {\"X\":[10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5], \"Y\":[7.46, 6.77, 12.74, 7.11, 7.81, 8.84, 6.08, 5.39, 8.15, 6.42, 5.73]} # Alocando os dados em uma Lista\n",
        "rb = pd.DataFrame(data, columns = [\"X\", \"Y\"]) # Montando um quadro de dados\n",
        "corrBruta = rb.corr() # Calculando a correlação\n",
        "sn.heatmap(corrBruta, annot=True) # gera a reguá do Grafico de calor\n",
        "plt.show # mostrar o grafico na tela\n",
        "print(\"O coeficiente de correlação e 0,82\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "O coeficiente de correlação e 0,82\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rcQaUqWonKsM"
      },
      "source": [
        "<b>Conjunto 4</b><br>\n",
        "<b>X</b>: 8, 8, 8, 8, 8, 8, 8, 19, 8, 8, 8<br>\n",
        "<b>Y</b>: 6.58, 5.76, 7.71, 8.84, 8.47, 7.04, 5.25, 12.50, 5.56, 7.91, 6.89"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "hi8S-Y2ZnKVE",
        "outputId": "928f3810-3d96-4052-8420-4eb19c6894d2"
      },
      "source": [
        "%reset -f\n",
        "import pandas as pd # importar a biblioteca de tratamento de dados\n",
        "import seaborn as sn #  melhorar o visual dos gráficos\n",
        "import matplotlib.pyplot as plt  #Importar bibliotecas para montar um gráfico \n",
        "data = {\"X\":[8, 8, 8, 8, 8, 8, 8, 19, 8, 8, 8], \"Y\":[6.58, 5.76, 7.71, 8.84, 8.47, 7.04, 5.25, 12.50, 5.56, 7.91, 6.89]} # Alocando os dados em uma Lista\n",
        "rb = pd.DataFrame(data, columns = [\"X\", \"Y\"]) # Montando um quadro de dados\n",
        "corrBruta = rb.corr() # Calculando a correlação\n",
        "sn.heatmap(corrBruta, annot=True) # gera a reguá do Grafico de calor\n",
        "plt.show # mostrar o grafico na tela\n",
        "print(\"O coeficiente de correlação e 0,82\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "O coeficiente de correlação e 0,82\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wMdYOlMY6qau"
      },
      "source": [
        "<p><h2><b><i>Questão 06</b></i><br>\n",
        "<p><i> Calcule o coeficiente de correlação linear de Pearson nos tres casos. O coeficiente confirma a impressão visual dos diagramas?\n",
        "<p><b>Produtividade</b>: 100, 102, 105, 108, 112, 120\n",
        "<p><b>Alimentação</b>: 4, 5, 1, 3, 6, 2\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ia5kzDni6s-w",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 342
        },
        "outputId": "04a478c4-0506-4bee-e64d-f3e9c195a585"
      },
      "source": [
        "%reset -f \n",
        "import pandas as pd # importar a biblioteca de tratamento de dados\n",
        "import seaborn as sn  #  melhorar o visual dos gráficos\n",
        "import matplotlib.pyplot as plt # Importar bibliotecas para montar um gráfico \n",
        "data = {'Produtividade': [100, 102, 105, 108, 112, 120], 'Alimentação': [4, 5, 1, 3, 6, 2]} # dados descritos na questão\n",
        "quadro = pd.DataFrame(data, columns = ['Produtividade', 'Alimentação']) # Montando um quadro de dados\n",
        "corrPearson = quadro.corr() #Calculando a correlação\n",
        "print(corrPearson)\n",
        "sn.heatmap(corrPearson, annot = True) # Grafico de calor \n",
        "plt.show # mostrar o grafico na tela"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "               Produtividade  Alimentação\n",
            "Produtividade       1.000000    -0.196822\n",
            "Alimentação        -0.196822     1.000000\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function matplotlib.pyplot.show>"
            ]
          },
          "metadata": {},
          "execution_count": 50
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f__x8oOlyw8n"
      },
      "source": [
        "<p><b>Produtividade</b>: 100, 102, 105, 108, 112, 120\n",
        "<p><b>Exercicios</b>: 1, 3, 2, 4, 5, 6"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 342
        },
        "id": "0Q-Wh-kPy0CX",
        "outputId": "14202e2c-c497-4fc4-aa00-e8d2091aae20"
      },
      "source": [
        "%reset -f \n",
        "import pandas as pd # importar a biblioteca de tratamento de dados\n",
        "import seaborn as sn  #  melhorar o visual dos gráficos\n",
        "import matplotlib.pyplot as plt # Importar bibliotecas para montar um gráfico \n",
        "data = {'Produtividade': [100, 102, 105, 108, 112, 120], 'Exercicios': [1, 3, 2, 4, 5, 6]} # dados descritos na questão\n",
        "quadro = pd.DataFrame(data, columns = ['Produtividade', 'Exercicios']) # Montando um quadro de dados\n",
        "corrPearson = quadro.corr() #Calculando a correlação\n",
        "print(corrPearson)\n",
        "sn.heatmap(corrPearson, annot = True) # Grafico de calor \n",
        "plt.show # mostrar o grafico na tela"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "               Produtividade  Exercicios\n",
            "Produtividade       1.000000    0.925791\n",
            "Exercicios          0.925791    1.000000\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function matplotlib.pyplot.show>"
            ]
          },
          "metadata": {},
          "execution_count": 49
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Z1K3ms_Ty0hQ"
      },
      "source": [
        "<p><b>Produtividade</b>: 100, 102, 105, 108, 112, 120\n",
        "<p><b>Rodizio</b>: 3, 1, 2 ,6, 4, 5"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 342
        },
        "id": "ZWubFH2ezlMX",
        "outputId": "660642c2-0be9-4551-ade8-015cf1f333d3"
      },
      "source": [
        "%reset -f \n",
        "import pandas as pd # importar a biblioteca de tratamento de dados\n",
        "import seaborn as sn  #  melhorar o visual dos gráficos\n",
        "import matplotlib.pyplot as plt # Importar bibliotecas para montar um gráfico \n",
        "data = {'Produtividade': [100, 102, 105, 108, 112, 120], 'Rodizio': [3, 1, 2 ,6, 4, 5]} # dados descritos na questão\n",
        "quadro = pd.DataFrame(data, columns = ['Produtividade', 'Rodizio']) # Montando um quadro de dados\n",
        "corrPearson = quadro.corr() #Calculando a correlação\n",
        "print(corrPearson)\n",
        "sn.heatmap(corrPearson, annot = True) # Grafico de calor \n",
        "plt.show # mostrar o grafico na tela"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "               Produtividade   Rodizio\n",
            "Produtividade       1.000000  0.634204\n",
            "Rodizio             0.634204  1.000000\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function matplotlib.pyplot.show>"
            ]
          },
          "metadata": {},
          "execution_count": 48
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "igUMB-IU0fWM"
      },
      "source": [
        "\n",
        "<p><b>Produtividade</b>: 100, 102, 105, 108, 112, 120\n",
        "<p><b>Alimentação</b>: 4, 5, 1, 3, 6, 2\n",
        "<p><b>Exercicios</b>: 1, 3, 2, 4, 5, 6\n",
        "<p><b>Rodizio</b>: 3, 1, 2 ,6, 4, 5"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 378
        },
        "id": "MoswDT_wzk5H",
        "outputId": "866c5d1a-2d4c-4e39-f1ba-fdba32b9fbe1"
      },
      "source": [
        "%reset -f \n",
        "import pandas as pd # importar a biblioteca de tratamento de dados\n",
        "import seaborn as sn  #  melhorar o visual dos gráficos\n",
        "import matplotlib.pyplot as plt # Importar bibliotecas para montar um gráfico \n",
        "data = {'Produtividade': [100, 102, 105, 108, 112, 120], 'Alimentação': [4, 5, 1, 3, 6, 2],'Exercicios': [1, 3, 2, 4, 5, 6],'Rodizio': [3, 1, 2 ,6, 4, 5]} # dados descritos na questão\n",
        "quadro = pd.DataFrame(data, columns = ['Produtividade', 'Alimentação', 'Exercicios', 'Rodizio']) # Montando um quadro de dados\n",
        "corrPearson = quadro.corr() #Calculando a correlação\n",
        "print(corrPearson)\n",
        "sn.heatmap(corrPearson, annot = True) # Grafico de calor \n",
        "plt.show # mostrar o grafico na tela\n",
        "print(\"O coeficiente confirma a impressão visual dos diagramas? Sim\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "               Produtividade  Alimentação  Exercicios   Rodizio\n",
            "Produtividade       1.000000    -0.196822    0.925791  0.634204\n",
            "Alimentação        -0.196822     1.000000    0.085714 -0.142857\n",
            "Exercicios          0.925791     0.085714    1.000000  0.600000\n",
            "Rodizio             0.634204    -0.142857    0.600000  1.000000\n",
            "O coeficiente confirma a impressão visual dos diagramas? Sim\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}
